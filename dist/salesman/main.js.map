{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/AuthService/auth-service.service.ts","webpack:///./src/app/Interceptors/AuthInterceptor.ts","webpack:///./src/app/Login/login/login.component.css","webpack:///./src/app/Login/login/login.component.html","webpack:///./src/app/Login/login/login.component.ts","webpack:///./src/app/_alert/alert-module/alert-module.module.ts","webpack:///./src/app/_alert/alert/alert.component.css","webpack:///./src/app/_alert/alert/alert.component.html","webpack:///./src/app/_alert/alert/alert.component.ts","webpack:///./src/app/admin/shop-create/shop-create.component.css","webpack:///./src/app/admin/shop-create/shop-create.component.html","webpack:///./src/app/admin/shop-create/shop-create.component.ts","webpack:///./src/app/admin/shop-staff-create/shop-staff-create.component.css","webpack:///./src/app/admin/shop-staff-create/shop-staff-create.component.html","webpack:///./src/app/admin/shop-staff-create/shop-staff-create.component.ts","webpack:///./src/app/alert-service/alert.service.ts","webpack:///./src/app/alert.model.ts","webpack:///./src/app/api-calls.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/billing/billing-details/billing-details.component.css","webpack:///./src/app/billing/billing-details/billing-details.component.html","webpack:///./src/app/billing/billing-details/billing-details.component.ts","webpack:///./src/app/billing/billing-list/billing-list.component.css","webpack:///./src/app/billing/billing-list/billing-list.component.html","webpack:///./src/app/billing/billing-list/billing-list.component.ts","webpack:///./src/app/common/common.module.ts","webpack:///./src/app/common/common.service.ts","webpack:///./src/app/enquery-service/enquery-service.service.ts","webpack:///./src/app/enquiry/enquiry-details/enquiry-details.component.css","webpack:///./src/app/enquiry/enquiry-details/enquiry-details.component.html","webpack:///./src/app/enquiry/enquiry-details/enquiry-details.component.ts","webpack:///./src/app/enquiry/enquiry-list/enquiry-list.component.css","webpack:///./src/app/enquiry/enquiry-list/enquiry-list.component.html","webpack:///./src/app/enquiry/enquiry-list/enquiry-list.component.ts","webpack:///./src/app/jsonconv.pipe.ts","webpack:///./src/app/manager/profile-create/profile-create.component.css","webpack:///./src/app/manager/profile-create/profile-create.component.html","webpack:///./src/app/manager/profile-create/profile-create.component.ts","webpack:///./src/app/shop-service/shop-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Login } from \"../login\";\nimport { User, userNew } from \"../user\";\nimport { Observable, throwError } from \"rxjs\";\nimport { shareReplay, tap } from \"rxjs/operators\";\nimport * as moment from \"moment\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthServiceService {\n  constructor(private http: HttpClient) {}\n  private api_url = \"http://localhost:8000\";\n\n  login(email: string, password: string): Observable<User> {\n    return this.http\n      .post<User>(this.api_url + \"/api/login\", { email, password })\n      .pipe(\n        tap((res) => {\n          this.setSession(res);\n          this.refreshToken();\n        }),\n        shareReplay()\n      );\n  }\n  register(user: userNew): Observable<any> {\n    return this.http\n      .post<userNew>(this.api_url + \"/api/register\", { user })\n      .pipe(\n        tap((res) => {\n          return res;\n        }),\n        shareReplay()\n      );\n  }\n  getUsers(salesman_id: string): Observable<any> {\n    return this.http.get<User>(this.api_url + \"/api/users/\" + salesman_id).pipe(\n      tap((res) => {\n        return res;\n      })\n    );\n  }\n\n  editUser(user: userNew): Observable<any> {\n    return this.http\n      .post<userNew>(this.api_url + \"/api/editUser\", { user })\n      .pipe(\n        tap((res) => {\n          return res;\n        }),\n        (err) => {\n          return err;\n        }\n      );\n  }\n\n  resetPassword(user: any): Observable<any> {\n    return this.http\n      .post<User>(this.api_url + \"/api/resetPassword\", { user })\n      .pipe(\n        tap(\n          (res) => {\n            return res;\n          },\n          (err) => {\n            return err;\n          }\n        )\n      );\n  }\n\n  disableProfile(id: any, status_body: any): Observable<any> {\n    return this.http\n      .post<any>(this.api_url + \"/api/disableProfile/\" + id, { status_body })\n      .pipe(\n        tap(\n          (res) => {\n            return res;\n          },\n          (err) => {\n            return err;\n          }\n        )\n      );\n  }\n  TokenCall(): Observable<any> {\n    let salesman_id = localStorage.removeItem(\"salesmen_id\");\n    return this.http\n      .post<any>(this.api_url + \"/api/refresh-Token\", { salesman_id })\n      .pipe(\n        tap((res) => {\n          this.removeoldtoken();\n          this.setSession(res);\n          this.refreshToken();\n        }),\n        shareReplay()\n      );\n  }\n  private setSession(authResult) {\n    const expiresAt = moment().add(authResult.expiresIn, \"second\");\n    localStorage.setItem(\"id_token\", authResult.token);\n    localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()));\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    localStorage.removeItem(\"salesmen_id\");\n    localStorage.removeItem(\"shop_id\");\n    localStorage.removeItem(\"role\");\n  }\n\n  removeoldtoken() {\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n  }\n\n  private refreshToken() {\n    const refreshTOken = setTimeout(() => {\n      this.TokenCall().subscribe();\n    }, 1140000);\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpEvent,\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const idToken = localStorage.getItem(\"id_token\");\r\n\r\n    if (idToken) {\r\n      const cloned = req.clone({\r\n        headers: req.headers\r\n          .set(\"x-access-token\", idToken)\r\n          .set(\"Content-type\", \"application/json\"),\r\n      });\r\n\r\n      return next.handle(cloned);\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"form {\\r\\n    border: 3px solid #f1f1f1;\\r\\n}\\r\\n\\r\\n/* Full-width inputs */\\r\\n\\r\\ninput[type=text], input[type=password] {\\r\\n    width: 100%;\\r\\n    padding: 12px 20px;\\r\\n    margin: 8px 0;\\r\\n    display: inline-block;\\r\\n    border: 1px solid #ccc;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n/* Set a style for all buttons */\\r\\n\\r\\nbutton {\\r\\n    color: #fff;\\r\\n    background-color: #007bff;\\r\\n    border-color: #007bff;\\r\\n    display: inline-block;\\r\\n    font-weight: 400;\\r\\n    text-align: center;\\r\\n    white-space: nowrap;\\r\\n    vertical-align: middle;\\r\\n    -webkit-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n    -ms-user-select: none;\\r\\n    user-select: none;\\r\\n    border: 1px solid transparent;\\r\\n    padding: .375rem .75rem;\\r\\n    font-size: 1rem;\\r\\n    line-height: 1.5;\\r\\n    border-radius: .25rem;\\r\\n    transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\\r\\n}\\r\\n\\r\\n/* Add a hover effect for buttons */\\r\\n\\r\\nbutton:hover {\\r\\n    opacity: 0.8;\\r\\n}\\r\\n\\r\\n/* Extra style for the cancel button (red) */\\r\\n\\r\\n.cancelbtn {\\r\\n    width: auto;\\r\\n    padding: 10px 18px;\\r\\n    background-color: #f44336;\\r\\n}\\r\\n\\r\\n/* Center the avatar image inside this container */\\r\\n\\r\\n.imgcontainer {\\r\\n    text-align: center;\\r\\n    margin: 24px 0 12px 0;\\r\\n}\\r\\n\\r\\n/* Avatar image */\\r\\n\\r\\nimg.avatar {\\r\\n    width: 40%;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n/* Add padding to containers */\\r\\n\\r\\n.container {\\r\\n    padding: 16px;\\r\\n}\\r\\n\\r\\n/* The \\\"Forgot password\\\" text */\\r\\n\\r\\nspan.psw {\\r\\n    float: right;\\r\\n    padding-top: 16px;\\r\\n}\\r\\n\\r\\n/* Change styles for span and cancel button on extra small screens */\\r\\n\\r\\n@media screen and (max-width: 300px) {\\r\\n    span.psw {\\r\\n        display: block;\\r\\n        float: none;\\r\\n    }\\r\\n    .cancelbtn {\\r\\n        width: 100%;\\r\\n    }\\r\\n}\"","module.exports = \"<form>\\r\\n  <div class=\\\"imgcontainer\\\">\\r\\n    <img\\r\\n      src=\\\"../../../../src/Artboard 3.png\\\"\\r\\n      alt=\\\"Avatar\\\"\\r\\n      style=\\\"height: 100px; width: 100px\\\"\\r\\n    />\\r\\n  </div>\\r\\n  <alert></alert>\\r\\n  <div class=\\\"container\\\">\\r\\n    <label for=\\\"uname\\\"><b>Username</b></label>\\r\\n    <input\\r\\n      type=\\\"text\\\"\\r\\n      placeholder=\\\"Enter Username\\\"\\r\\n      [(ngModel)]=\\\"username\\\"\\r\\n      name=\\\"uname\\\"\\r\\n      required\\r\\n    />\\r\\n\\r\\n    <label for=\\\"psw\\\"><b>Password</b></label>\\r\\n    <input\\r\\n      type=\\\"password\\\"\\r\\n      placeholder=\\\"Enter Password\\\"\\r\\n      [(ngModel)]=\\\"password\\\"\\r\\n      name=\\\"psw\\\"\\r\\n      required\\r\\n    />\\r\\n\\r\\n    <button type=\\\"submit\\\" style=\\\"margin-left: 45%\\\" (click)=\\\"submit()\\\">\\r\\n      Login\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthServiceService } from \"../../AuthService/auth-service.service\";\r\nimport { Login } from \"../../login\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CommonService } from \"../../common/common.service\";\r\nimport { AlertService } from \"../../alert-service/alert.service\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  private array: Login[];\r\n  username;\r\n  password;\r\n  options = {\r\n    autoClose: true,\r\n    keepAfterRouteChange: false,\r\n  };\r\n\r\n  constructor(\r\n    private apicall: AuthServiceService,\r\n    public router: Router,\r\n    private cservice: CommonService,\r\n    protected alertService: AlertService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.Activate();\r\n  }\r\n  async Activate() {\r\n    // this.router.navigate([\"/enquiry-list\"]);\r\n  }\r\n  submit() {\r\n    console.log(\"clicked\");\r\n    if (this.username && this.password) {\r\n      let reg_email = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\r\n      let reg_password = \"(?=.*d)(?=.*[a-z])(?=.*[A-Z]).{8,}\";\r\n      if (!this.username.match(reg_email)) {\r\n        this.alertService.error(\"Enter Valid Email\", this.options);\r\n      }\r\n      // else if (!this.password.match(reg_password)) {\r\n      //   this.alertService.error(\r\n      //     \"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\",\r\n      //     this.options\r\n      //   );\r\n      // }\r\n      else {\r\n        this.apicall.login(this.username, this.password).subscribe(\r\n          (e) => {\r\n            this.cservice.setUserDetails(e.shop_id, e._id, e.role); // salesmen id\r\n            if (e.role == \"m\") {\r\n              this.router.navigate([\"/profile-create\"]);\r\n            } else if (e.role == \"a\") {\r\n              this.router.navigate([\"/staffCreate\"]);\r\n            } else {\r\n              this.router.navigate([\"/enquiry-list\"]);\r\n            }\r\n          },\r\n          (err) => {\r\n            this.alertService.error(err.error.message, this.options);\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.alertService.error(\r\n        \"please enter the username and password\",\r\n        this.options\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AlertComponent } from \"../alert/alert.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AlertComponent],\n  exports: [AlertComponent],\n})\nexport class AlertModuleModule {}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let alert of alerts\\\" class=\\\"{{ cssClass(alert) }}\\\">\\n  <a class=\\\"close\\\" (click)=\\\"removeAlert(alert)\\\">&times;</a>\\n  <span [innerHTML]=\\\"alert.message\\\"></span>\\n</div>\\n\"","import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\nimport { Router, NavigationStart } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\nimport { Alert, AlertType } from \"../../alert.model\";\nimport { AlertService } from \"../../alert-service/alert.service\";\n\n@Component({\n  selector: \"alert\",\n  templateUrl: \"./alert.component.html\",\n  styleUrls: [\"./alert.component.css\"],\n})\nexport class AlertComponent implements OnInit {\n  @Input() id = \"default-alert\";\n  @Input() fade = true;\n\n  alerts: Alert[] = [];\n  alertSubscription: Subscription;\n  routeSubscription: Subscription;\n  constructor(private router: Router, private alertService: AlertService) {}\n\n  ngOnInit() {\n    // subscribe to new alert notifications\n    this.alertSubscription = this.alertService\n      .onAlert(this.id)\n      .subscribe((alert) => {\n        // clear alerts when an empty alert is received\n        if (!alert.message) {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          this.alerts = this.alerts.filter((x) => x.keepAfterRouteChange);\n\n          // remove 'keepAfterRouteChange' flag on the rest\n          this.alerts.forEach((x) => delete x.keepAfterRouteChange);\n          return;\n        }\n\n        // add alert to array\n        this.alerts.push(alert);\n\n        // auto close alert if required\n        if (alert.autoClose) {\n          setTimeout(() => this.removeAlert(alert), 3000);\n        }\n      });\n\n    // clear alerts on location change\n    this.routeSubscription = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationStart) {\n        this.alertService.clear(this.id);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.alertSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  removeAlert(alert: Alert) {\n    // check if already removed to prevent error on auto close\n    if (!this.alerts.includes(alert)) return;\n\n    if (this.fade) {\n      // fade out alert\n      this.alerts.find((x) => x === alert).fade = true;\n\n      // remove alert after faded out\n      setTimeout(() => {\n        this.alerts = this.alerts.filter((x) => x !== alert);\n      }, 250);\n    } else {\n      // remove alert\n      this.alerts = this.alerts.filter((x) => x !== alert);\n    }\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) return;\n\n    const classes = [\"alert\", \"alert-dismissable\"];\n\n    const alertTypeClass = {\n      [AlertType.Success]: \"alert alert-success\",\n      [AlertType.Error]: \"alert alert-danger\",\n      [AlertType.Info]: \"alert alert-info\",\n      [AlertType.Warning]: \"alert alert-warning\",\n    };\n\n    classes.push(alertTypeClass[alert.type]);\n\n    if (alert.fade) {\n      classes.push(\"fade\");\n    }\n\n    return classes.join(\" \");\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/staffCreate']\\\">\\n      <img\\n        src=\\\"../../../assets/brand/bootstrap-solid.svg\\\"\\n        width=\\\"30\\\"\\n        height=\\\"30\\\"\\n        class=\\\"d-inline-block align-top\\\"\\n        alt=\\\"\\\"\\n      />\\n      Juturu\\n    </a>\\n    <button\\n      class=\\\"navbar-toggler\\\"\\n      type=\\\"button\\\"\\n      data-toggle=\\\"collapse\\\"\\n      data-target=\\\"#navbarSupportedContent\\\"\\n      aria-controls=\\\"navbarSupportedContent\\\"\\n      aria-expanded=\\\"false\\\"\\n      aria-label=\\\"Toggle navigation\\\"\\n    >\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/staffCreate']\\\">Staff Register</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/shopCreate']\\\">Shop Register</a>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/enquiry-list']\\\">Enquiries</a>\\n        </li>\\n      </ul>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">Logout</button>\\n    </div>\\n  </nav>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <h2>Store List</h2>\\n  </div>\\n  <div class=\\\"col-md-6 col-md-offset-2\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthServiceService } from \"../../AuthService/auth-service.service\";\nimport { ShopServiceService } from \"../../shop-service/shop-service.service\";\nimport { User } from \"src/app/user\";\nimport { CommonService } from \"../../common/common.service\";\nimport { AlertService } from \"../../alert-service/alert.service\";\n\n@Component({\n  selector: \"app-shop-create\",\n  templateUrl: \"./shop-create.component.html\",\n  styleUrls: [\"./shop-create.component.css\"],\n})\nexport class ShopCreateComponent implements OnInit {\n  shop_id: string; // shop id from salesman after login\n  salesmen_id; // salesman id from salesman after login\n  role: string;\n  errorMessage;\n  user: User;\n  createUser: User;\n  options = {\n    autoClose: true,\n    keepAfterRouteChange: false,\n  };\n  constructor(\n    private router: Router,\n    private Auth: AuthServiceService,\n    private cservice: CommonService,\n    private shopService: ShopServiceService,\n    protected alertService: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.Activate();\n  }\n  Activate() {\n    // get all shops here\n    // this.Auth.getUsers(this.salesmen_id).subscribe((data) => {\n    //   this.user = data;\n    // });\n  }\n  logout() {\n    this.Auth.logout();\n    this.router.navigate([\"/login\"]);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/staffCreate']\\\">\\n      <img\\n        src=\\\"../../../assets/brand/bootstrap-solid.svg\\\"\\n        width=\\\"30\\\"\\n        height=\\\"30\\\"\\n        class=\\\"d-inline-block align-top\\\"\\n        alt=\\\"\\\"\\n      />\\n      Juturu\\n    </a>\\n    <button\\n      class=\\\"navbar-toggler\\\"\\n      type=\\\"button\\\"\\n      data-toggle=\\\"collapse\\\"\\n      data-target=\\\"#navbarSupportedContent\\\"\\n      aria-controls=\\\"navbarSupportedContent\\\"\\n      aria-expanded=\\\"false\\\"\\n      aria-label=\\\"Toggle navigation\\\"\\n    >\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/staffCreate']\\\">Staff Register</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/shopCreate']\\\">Shop Register</a>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/enquiry-list']\\\">Enquiries</a>\\n        </li>\\n      </ul>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">Logout</button>\\n    </div>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shop-staff-create',\n  templateUrl: './shop-staff-create.component.html',\n  styleUrls: ['./shop-staff-create.component.css']\n})\nexport class ShopStaffCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Alert, AlertType } from \"../alert.model\";\nimport { Observable, Subject } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AlertService {\n  private subject = new Subject<Alert>();\n  private defaultId = \"default-alert\";\n  constructor() {}\n  onAlert(id = this.defaultId): Observable<Alert> {\n    return this.subject.asObservable().pipe(filter((x) => x && x.id === id));\n  }\n  success(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n  }\n  error(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n  }\n  alert(alert: Alert) {\n    alert.id = alert.id || this.defaultId;\n    this.subject.next(alert);\n  }\n  clear(id = this.defaultId) {\n    this.subject.next(new Alert({ id }));\n  }\n}\n","export class Alert {\r\n  id: string;\r\n  type: AlertType;\r\n  message: string;\r\n  autoClose: boolean;\r\n  keepAfterRouteChange: boolean;\r\n  fade: boolean;\r\n\r\n  constructor(init?: Partial<Alert>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport enum AlertType {\r\n  Success,\r\n  Error,\r\n  Info,\r\n  Warning,\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Billing } from \"./billing\";\r\nimport { Login } from \"./login\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport * as moment from \"moment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ApiCallsService {\r\n  // private api_url = 'https://api.juturu.online';\r\n  private api_url = \"http://localhost:4000\";\r\n  constructor(private http: HttpClient) {}\r\n  // getBillings(s_id, date): Promise<Billing[]> {\r\n  //   return this.http.get<Billing[]>(this.api_url + '/api/billing/?s_id=' + s_id + '&date=' + date).toPromise();\r\n  // }\r\n  getBillings(s_id, date): Observable<Billing[]> {\r\n    return this.http.get<Billing[]>(\r\n      this.api_url + \"/api/billing/?s_id=\" + s_id + \"&date=\" + date\r\n    );\r\n  }\r\n  createBill(bill): Promise<Billing[]> {\r\n    return this.http\r\n      .post<Billing[]>(this.api_url + \"/api/billing\", bill)\r\n      .toPromise();\r\n  }\r\n  updateBill(bill): Promise<Billing[]> {\r\n    return this.http\r\n      .put<Billing[]>(this.api_url + \"/api/billing/\" + bill._id, bill)\r\n      .toPromise();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { AuthServiceService } from \"./AuthService/auth-service.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  constructor(private Auth: AuthServiceService, private router: Router) {}\r\n  title = \"salesman\";\r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { BillingListComponent } from \"./billing/billing-list/billing-list.component\";\r\nimport { BillingDetailsComponent } from \"./billing/billing-details/billing-details.component\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { EnquiryListComponent } from \"./enquiry/enquiry-list/enquiry-list.component\";\r\nimport { EnquiryDetailsComponent } from \"./enquiry/enquiry-details/enquiry-details.component\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { LoginComponent } from \"./Login/login/login.component\";\r\nimport { ServiceWorkerModule } from \"@angular/service-worker\";\r\nimport { environment } from \"../environments/environment\";\r\nimport { JsonconvPipe } from \"./jsonconv.pipe\";\r\nimport { CommonModule } from \"./common/common.module\";\r\nimport { AuthInterceptor } from \"./Interceptors/AuthInterceptor\";\r\nimport { AlertComponent } from \"./_alert/alert/alert.component\";\r\nimport { AlertModuleModule } from \"./_alert/alert-module/alert-module.module\";\r\nimport { ProfileCreateComponent } from \"./manager/profile-create/profile-create.component\";\r\nimport { ShopCreateComponent } from \"./admin/shop-create/shop-create.component\";\r\nimport { ShopStaffCreateComponent } from \"./admin/shop-staff-create/shop-staff-create.component\";\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"/login\", pathMatch: \"full\" },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"enquiry-list\", component: EnquiryListComponent },\r\n  { path: \"billing-list\", component: BillingListComponent },\r\n  { path: \"profile-create\", component: ProfileCreateComponent },\r\n  { path: \"shopCreate\", component: ShopCreateComponent },\r\n  { path: \"staffCreate\", component: ShopStaffCreateComponent },\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BillingListComponent,\r\n    BillingDetailsComponent,\r\n    EnquiryListComponent,\r\n    EnquiryDetailsComponent,\r\n    LoginComponent,\r\n    JsonconvPipe,\r\n    ProfileCreateComponent,\r\n    ShopCreateComponent,\r\n    ShopStaffCreateComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    CommonModule.forRoot(),\r\n    AlertModuleModule,\r\n    ServiceWorkerModule.register(\"ngsw-worker.js\", {\r\n      enabled: environment.production,\r\n    }),\r\n  ],\r\n  providers: [\r\n    DatePipe,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","module.exports = \".card {\\r\\n    box-shadow: 0 10px 8px 0 rgba(0,0,0,0.2);\\r\\n    transition: 100.0s;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    padding: 2px 16px 10px 16px;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    margin-left: 1%;\\r\\n    margin-right: 1%;\\r\\n}\\r\\n\\r\\n.products {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    height: calc(2.25rem + 2px);\\r\\n    padding: .375rem .75rem;\\r\\n    font-size: 1rem;\\r\\n    line-height: 1.5;\\r\\n    color: #495057;\\r\\n    background-color: #fff;\\r\\n    background-clip: padding-box;\\r\\n    border: 1px solid #ced4da;\\r\\n    border-radius: .25rem;\\r\\n    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"bill\\\">\\r\\n  <div *ngIf=\\\"bill.view == 'u' || bill.view == 'n' && bill.view != 'v' \\\" class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h2 *ngIf=\\\"bill.view == 'u'\\\">Update Bill</h2>\\r\\n      <h2 *ngIf=\\\"bill.view == 'n'\\\">New Bill</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"bill.view == 'u' || bill.view == 'n' && bill.view != 'v'\\\" class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"bill-name\\\">Name</label>\\r\\n        <input class=\\\"form-control\\\" name=\\\"bill-name\\\" [(ngModel)]=\\\"bill.name\\\" placeholder=\\\"Name\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"bill-phone-no\\\">Phone_No</label>\\r\\n        <input class=\\\"form-control\\\" name=\\\"bill-phone-no\\\" [(ngModel)]=\\\"bill.phone_no\\\" placeholder=\\\"1234567890\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"bill-address\\\">Address</label>\\r\\n        <input class=\\\"form-control\\\" name=\\\"bill-address\\\" [(ngModel)]=\\\"bill.address\\\" placeholder=\\\"Enter your street and door number with city\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"bill-city\\\">City</label>\\r\\n        <input class=\\\"form-control\\\" name=\\\"bill-city\\\" [(ngModel)]=\\\"bill.city\\\" placeholder=\\\"Hyderabad\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"select-no-of-products\\\">Select No of Products</label>\\r\\n        <select class=\\\"products\\\" [(ngModel)]=\\\"count\\\" name=\\\"count of the products\\\" (change)=\\\"setProduct()\\\">\\r\\n          <option value=\\\"1\\\">1</option>\\r\\n          <option value=\\\"2\\\">2</option>\\r\\n          <option value=\\\"3\\\">3</option>\\r\\n          <option value=\\\"4\\\">4</option>\\r\\n          <option value=\\\"5\\\">5</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"bill.products && bill.products.length\\\">\\r\\n        <div *ngFor=\\\"let b of bill.products; let i = index;\\\">\\r\\n          <h4>Product: {{i+1}}</h4>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"bill-product\\\">Product</label>\\r\\n            <input class=\\\"form-control\\\" name=\\\"bill-product\\\" [(ngModel)]=\\\"b.product_type\\\" placeholder=\\\"refregirator\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"bill-model-no\\\">Model_No</label>\\r\\n            <input class=\\\"form-control\\\" name=\\\"bill-model-no\\\" [(ngModel)]=\\\"b.model_no\\\" placeholder=\\\"Enter the model number\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"bill-given-price\\\">Price</label>\\r\\n            <input class=\\\"form-control\\\" name=\\\"bill-given-price\\\" [(ngModel)]=\\\"b.given_price\\\" placeholder=\\\"Enter the given amount\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"bill-comments\\\">Comments</label>\\r\\n            <input class=\\\"form-control\\\" name=\\\"bill-comments\\\" [(ngModel)]=\\\"b.Comments\\\" placeholder=\\\"Enter comments if needed\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"bill-payment-mode\\\"> Mode of payment</label>\\r\\n            <button class=\\\"btn btn-{{b.payment_type == 'finance'? 'primary': 'default'}}\\\" (click)=\\\"b.payment_type = 'finance' \\\">\\r\\n              finance </button>\\r\\n            <button class=\\\"btn btn-{{b.payment_type == 'cash'? 'primary': 'default'}}\\\" (click)=\\\"b.payment_type = 'cash'\\\">cash</button>\\r\\n            <button class=\\\"btn btn-{{b.payment_type == 'card'? 'primary': 'default'}}\\\" (click)=\\\"b.payment_type = 'card'\\\">card</button>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"bill-payment-mode\\\"> Mode of payment</label>\\r\\n            <button class=\\\"btn btn-{{b.stock_place == 'showroom'? 'primary': 'default'}}\\\" (click)=\\\"b.stock_place = 'showroom' \\\">\\r\\n              showroom </button>\\r\\n            <button class=\\\"btn btn-{{b.stock_place == 'godown'? 'primary': 'default'}}\\\" (click)=\\\"b.stock_place = 'godown'\\\">godown</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-primary\\\" *ngIf=\\\"bill.view == 'n'\\\" (click)=\\\"createBill(bill)\\\">Create</button>\\r\\n      <button class=\\\"btn btn-info\\\" *ngIf=\\\"bill.view == 'u'\\\" (click)=\\\"updateBill(bill)\\\">Update</button>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n  <div style=\\\"margin-top: 2%\\\">\\r\\n    <div class=\\\"col-md-12\\\" *ngIf=\\\"bill.view =='v'\\\">\\r\\n      <h2>Bill Details</h2>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\" *ngIf=\\\"bill.view =='v'\\\">\\r\\n      <div class=\\\"container row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <p>Name: {{bill.name}}</p>\\r\\n          <p>Mobile: {{bill.phone_no}}</p>\\r\\n          <p>Address: {{bill.address}}</p>\\r\\n          <p>City: {{bill.city}}</p>\\r\\n          <ul *ngFor=\\\"let item of bill.products; let i = index;\\\">\\r\\n            <li>\\r\\n              <h6>Product:{{i+1}}</h6>\\r\\n            </li>\\r\\n            <li>{{item.product_type}}</li>\\r\\n            <li>{{item.model_no}}</li>\\r\\n            <li>{{item.given_price}}</li>\\r\\n            <li>Status {{item.status}}</li>\\r\\n            <li><label>Mode Of Payment:</label>\\r\\n              <button disabled class=\\\"btn btn-{{item.payment_type == 'finance'? 'primary': 'default'}}\\\" *ngIf=\\\"item.payment_type == 'finance'\\\">\\r\\n                finance </button>\\r\\n              <button disabled class=\\\"btn btn-{{item.payment_type == 'cash'? 'primary': 'default'}}\\\" *ngIf=\\\"item.payment_type == 'cash'\\\">cash</button>\\r\\n              <button disabled class=\\\"btn btn-{{item.payment_type == 'card'? 'primary': 'default'}}\\\" *ngIf=\\\"item.payment_type == 'card'\\\">card</button></li>\\r\\n              <li><label>Stock:</label>\\r\\n                <button disabled class=\\\"btn btn-{{item.stock_place == 'showroom'? 'primary': 'default'}}\\\" *ngIf=\\\"item.stock_place == 'showroom'\\\">\\r\\n                  showroom </button>\\r\\n                <button disabled class=\\\"btn btn-{{item.stock_place == 'godown'? 'primary': 'default'}}\\\" *ngIf=\\\"item.stock_place == 'godown'\\\">Godown</button></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Billing } from '../../billing';\r\nimport { ApiCallsService } from '../../api-calls.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-billing-details',\r\n  templateUrl: './billing-details.component.html',\r\n  styleUrls: ['./billing-details.component.css']\r\n})\r\nexport class BillingDetailsComponent implements OnInit {\r\n  count;\r\n  @Input() bill: Billing;\r\n\r\n  @Input() createHandler: Function;\r\n  @Input() updateHandler: Function;\r\n\r\n  days; // to get the count of days;\r\n  constructor(private apicall: ApiCallsService, private datepipe: DatePipe) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  setProduct(c) {\r\n    this.bill.products = [];\r\n    c = Number(this.count);\r\n    for (let i = 0; i < c; i++) {\r\n      this.bill.products.push({\r\n        product_type: '',\r\n        model_no: '',\r\n        given_price: '',\r\n        payment_type: '',\r\n        comments: '',\r\n        stock_place: ''\r\n      });\r\n    }\r\n\r\n  }\r\n  async createBill(bill: Billing) {\r\n    await this.apicall.createBill(bill).then((newBill: Billing[]) => {\r\n      this.createHandler(newBill);\r\n    });\r\n  }\r\n\r\n  updateBill(bill: Billing): void {\r\n    this.apicall.updateBill(bill).then((updatedBill: Billing[]) => {\r\n      this.updateHandler(updatedBill);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".row{\\r\\n    margin: 0px;\\r\\n}\\r\\n.view-button{\\r\\n    position: absolute;\\r\\n    right: 25%;\\r\\n    top: 7%;\\r\\n}\\r\\n.update-button{\\r\\n    position: absolute;\\r\\n    right: 4%;\\r\\n    top: 7%;\\r\\n}\\r\\n.status-button{\\r\\n    position: absolute;\\r\\n    right: 35%;\\r\\n    top: 7%;\\r\\n}\\r\\n@media only screen and (max-width: 640px) {\\r\\n    li.list-group-item {\\r\\n        padding: 10px 5px;\\r\\n    }\\r\\n    li.list-group-item table {\\r\\n        width: 100%;\\r\\n    }\\r\\n    td.username{\\r\\n        padding: 0;\\r\\n        display: block;\\r\\n        width: 100%;;\\r\\n    }\\r\\n    td.view{\\r\\n        width: auto;\\r\\n        display: inline-block;\\r\\n        vertical-align: top;\\r\\n    }\\r\\n    .view-button{\\r\\n        position: static;\\r\\n        float: none;\\r\\n    width: 100%;\\r\\n    margin-right: 10px;\\r\\n    }\\r\\n    .update-button{\\r\\n        width: 100%;\\r\\n        float: none;\\r\\n        position: static;\\r\\n    }\\r\\n    .status-button{\\r\\n        float: none;\\r\\n        position: static;\\r\\n    right: 35%;\\r\\n    top: 7%;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"[ '/billing-list']\\\">\\r\\n      <img src=\\\"/docs/4.0/assets/brand/bootstrap-solid.svg\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\r\\n      Juturu\\r\\n    </a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n      aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/enquiry-list']\\\">Enquiries</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"[ '/billing-list']\\\">Bills<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"[ '/login']\\\">Logout</button>\\r\\n    </div>\\r\\n  </nav>\\r\\n</div>\\r\\n<div>\\r\\n  <div class=\\\"row \\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h2>Bills</h2>\\r\\n      <ul class=\\\"list-group\\\" *ngFor=\\\"let bill of billingQueries\\\">\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <table>\\r\\n            <td class=\\\"username\\\">{{bill.name}}</td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button disabled class=\\\"btn btn-{{bill.status == 'p'? 'danger' : 'success'}} status-button\\\" style=\\\"margin-left: 5%\\\">\\r\\n                {{bill.status == 'p' ? 'Pending' : 'Done'}}</button>\\r\\n            </td>\\r\\n            <td class=\\\"view\\\"><button class=\\\"btn btn-warning view-button\\\" [class.active]=\\\"bill === selectedBill\\\" (click)=\\\"viewBill(bill)\\\">view</button></td>\\r\\n            <td class=\\\"view\\\"><button class=\\\"btn btn-primary update-button\\\" [disabled]=\\\"bill.status == 'd'\\\" (click)=\\\"selectBill(bill); bill.view = 'u'\\\">Update</button></td>\\r\\n          </table>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <button class=\\\"btn btn-warning\\\" (click)=\\\"createNewBilling()\\\">New</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 col-md-offset-2\\\">\\r\\n      <app-billing-details [bill]=\\\"selectedBill\\\" [createHandler]=\\\"addBill\\\" [updateHandler]=\\\"updateBill\\\">\\r\\n      </app-billing-details>\\r\\n    </div>\\r\\n\\r\\n  </div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ApiCallsService } from \"../../api-calls.service\";\r\nimport { Billing } from \"../../billing\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { CommonService } from \"../../common/common.service\";\r\n@Component({\r\n  selector: \"app-billing-list\",\r\n  templateUrl: \"./billing-list.component.html\",\r\n  styleUrls: [\"./billing-list.component.css\"],\r\n  providers: [ApiCallsService],\r\n})\r\nexport class BillingListComponent implements OnInit {\r\n  billingQueries: Billing[];\r\n  selectedBill: Billing;\r\n  filteredQuieries;\r\n  s_id: String;\r\n  date;\r\n  view;\r\n  constructor(\r\n    private apiCall: ApiCallsService,\r\n    private datepipe: DatePipe,\r\n    private cservice: CommonService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activate();\r\n  }\r\n  async activate() {\r\n    const today = new Date();\r\n    this.s_id = this.cservice.getsid();\r\n    const date = this.datepipe.transform(today, \"dd-MM-yyyy\");\r\n    // this.billingQueries = await this.apiCall.getBillings(this.s_id, date);\r\n    window.setInterval(() => {\r\n      this.apiCall\r\n        .getBillings(this.s_id, date)\r\n        .subscribe((data) => (this.billingQueries = data)),\r\n        10000;\r\n    });\r\n    // this.apiCall.getBillings(this.s_id, date).subscribe(data => this.billingQueries = data);\r\n    this.date = date;\r\n  }\r\n  private getIndexOfContact(billId: String) {\r\n    return this.billingQueries.findIndex((bill) => {\r\n      return bill._id === billId;\r\n    });\r\n  }\r\n\r\n  selectBill(bill: Billing) {\r\n    this.selectedBill = bill;\r\n  }\r\n\r\n  createNewBilling() {\r\n    const bill: Billing = {\r\n      name: \"\",\r\n      phone_no: 0,\r\n      address: \"\",\r\n      city: \"\",\r\n      date: this.date,\r\n      s_id: this.s_id,\r\n      view: \"n\",\r\n      status: \"p\",\r\n      products: [\r\n        {\r\n          product_type: \"\",\r\n          model_no: \"\",\r\n          given_price: \"\",\r\n          payment_type: \"\",\r\n          comments: \"\",\r\n          stock_place: \"\",\r\n        },\r\n      ],\r\n      count: \"\",\r\n    };\r\n    bill.view = \"n\";\r\n    // By default, a newly-created contact will have the selected state.\r\n    this.selectBill(bill);\r\n  }\r\n  viewBill(bill: Billing) {\r\n    bill.view = \"v\";\r\n    this.selectBill(bill);\r\n  }\r\n\r\n  addBill = (bill: Billing) => {\r\n    this.billingQueries.push(bill);\r\n    this.selectBill(bill);\r\n    return this.billingQueries;\r\n  };\r\n\r\n  updateBill = (bill: Billing) => {\r\n    const idx = this.getIndexOfContact(bill._id);\r\n    if (idx !== -1) {\r\n      this.billingQueries[idx] = bill;\r\n      this.selectBill(bill);\r\n    }\r\n    return this.billingQueries;\r\n  };\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonService } from './common.service';\r\n@NgModule({\r\n\r\n})\r\nexport class CommonModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: CommonModule,\r\n      providers: [CommonService]\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CommonService {\r\n  s_id: String;\r\n  shop_id: string;\r\n  salesmen_id: String;\r\n\r\n  Setsid(id: String) {\r\n    this.s_id = id;\r\n  }\r\n  getsid() {\r\n    return this.s_id;\r\n  }\r\n\r\n  setUserDetails(shop_id: string, salesman_id: string, role: string) {\r\n    localStorage.setItem(\"shop_id\", shop_id);\r\n    localStorage.setItem(\"salesmen_id\", salesman_id);\r\n    localStorage.setItem(\"role\", role);\r\n  }\r\n\r\n  getUserDetails() {\r\n    let details = {\r\n      shop_id: localStorage.getItem(\"shop_id\"),\r\n      salesmen_id: localStorage.getItem(\"salesmen_id\"),\r\n      role: localStorage.getItem(\"role\"),\r\n    };\r\n\r\n    return details;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Enquiery } from \"../Enquiery\";\nimport { enquery_success } from \"../success.model\";\nimport { Observable, throwError } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class EnqueryServiceService {\n  constructor(private http: HttpClient) {}\n  // private api_url = 'https://api.juturu.online';\n  private api_url = \"http://localhost:8000\";\n  private idToken = localStorage.getItem(\"id_token\");\n  getEnquiries(s_id, date, apiParms?: HttpParams): Observable<Enquiery[]> {\n    var body = { l: \"l\" };\n    if (!apiParms) apiParms = new HttpParams();\n    apiParms.append(\"salesmen_id\", s_id).set(\"date\", date);\n    return this.http.get<Enquiery[]>(\n      this.api_url + \"/api/getEnquiries?salesmen_id=\" + s_id + \"&date=\" + date\n    );\n  }\n  getTodaysEnquiries(\n    s_id,\n    date,\n    apiParms?: HttpParams\n  ): Observable<Enquiery[]> {\n    var body = { l: \"l\" };\n    if (!apiParms) apiParms = new HttpParams();\n    apiParms.append(\"salesmen_id\", s_id).append(\"date\", date);\n    return this.http.get<Enquiery[]>(\n      this.api_url +\n        \"/api/getTodaysEnquiries?salesmen_id=\" +\n        s_id +\n        \"&date=\" +\n        date\n    );\n  }\n\n  createQuery(query): Promise<enquery_success> {\n    return this.http\n      .post<enquery_success>(this.api_url + \"/api/createEnquery\", query)\n      .toPromise();\n  }\n  updateQuery(salesmen_id, query): Promise<enquery_success> {\n    return this.http\n      .put<enquery_success>(\n        this.api_url + \"/api/editEnquery?salesmen_id=\" + salesmen_id,\n        query\n      )\n      .toPromise();\n  }\n}\n","module.exports = \".card {\\r\\n    box-shadow: 0 10px 8px 0 rgba(0,0,0,0.2);\\r\\n    transition: 100.0s;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    padding: 2px 16px 10px 16px;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    margin-left: 1%;\\r\\n    margin-right: 1%;\\r\\n}\\r\\n\\r\\n.products {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    height: calc(2.25rem + 2px);\\r\\n    padding: .375rem .75rem;\\r\\n    font-size: 1rem;\\r\\n    line-height: 1.5;\\r\\n    color: #495057;\\r\\n    background-color: #fff;\\r\\n    background-clip: padding-box;\\r\\n    border: 1px solid #ced4da;\\r\\n    border-radius: .25rem;\\r\\n    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"query\\\">\\r\\n  <div\\r\\n    *ngIf=\\\"query.view == 'u' || (query.view == 'n' && query.view != 'v')\\\"\\r\\n    class=\\\"row\\\"\\r\\n  >\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h2 *ngIf=\\\"query.view == 'u'\\\">Update Query</h2>\\r\\n      <h2 *ngIf=\\\"query.view == 'n'\\\">New Query</h2>\\r\\n      <h2 *ngIf=\\\"query.view == 's'\\\">update Status</h2>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div\\r\\n    *ngIf=\\\"query.view == 'u' || (query.view == 'n' && query.view != 'v')\\\"\\r\\n    class=\\\"row\\\"\\r\\n  >\\r\\n    <form class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"query-name\\\">Name</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"query-name\\\"\\r\\n          [(ngModel)]=\\\"query.customer_id.name\\\"\\r\\n          placeholder=\\\"Enter Customer name\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"query-phone-no\\\">Phone_No</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"query-phone-no\\\"\\r\\n          [(ngModel)]=\\\"query.customer_id.phone_no\\\"\\r\\n          placeholder=\\\"Enter customer query\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"query-address\\\">Address</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"query-address\\\"\\r\\n          [(ngModel)]=\\\"query.customer_id.address\\\"\\r\\n          placeholder=\\\"Enter customer street and door number with city\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"query-city\\\">City</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"query-city\\\"\\r\\n          [(ngModel)]=\\\"query.customer_id.city\\\"\\r\\n          placeholder=\\\"Enter customer city name\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"query.view != 'u'\\\">\\r\\n        <label for=\\\"select-no-of-products\\\">Select No of Products</label>\\r\\n        <select\\r\\n          class=\\\"products\\\"\\r\\n          [(ngModel)]=\\\"query.count\\\"\\r\\n          name=\\\"count of the products\\\"\\r\\n          (change)=\\\"setProduct()\\\"\\r\\n        >\\r\\n          <option value=\\\"1\\\">1</option>\\r\\n          <option value=\\\"2\\\">2</option>\\r\\n          <option value=\\\"3\\\">3</option>\\r\\n          <option value=\\\"4\\\">4</option>\\r\\n          <option value=\\\"5\\\">5</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"query.products && query.products.length\\\">\\r\\n        <div *ngFor=\\\"let q of query.products; let i = index\\\">\\r\\n          <h4>Product: {{ i + 1 }}</h4>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"query-brand-name\\\">Name of the Brand</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              name=\\\"query-brand-name\\\"\\r\\n              [(ngModel)]=\\\"q.brand\\\"\\r\\n              placeholder=\\\"Enter the brands name\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"query-product\\\">Product</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              name=\\\"query-product\\\"\\r\\n              [(ngModel)]=\\\"q.product_type\\\"\\r\\n              placeholder=\\\"Enter the product name\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"query-model-no\\\">Model_No</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              name=\\\"query-model-no\\\"\\r\\n              [(ngModel)]=\\\"q.model_no\\\"\\r\\n              placeholder=\\\"Enter the model number\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"query-given-price\\\">Price</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              name=\\\"q-given-price\\\"\\r\\n              [(ngModel)]=\\\"q.given_price\\\"\\r\\n              placeholder=\\\"Enter the given price\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"bill-number-of-days\\\">enter number of days</label>\\r\\n            <input\\r\\n              class=\\\"form-control\\\"\\r\\n              name=\\\"bill-number-of-days\\\"\\r\\n              [(ngModel)]=\\\"q.days\\\"\\r\\n              placeholder=\\\"enter number of days\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div>\\r\\n            <label>Mode Of Payment:</label>\\r\\n            <button\\r\\n              class=\\\"btn btn-{{\\r\\n                q.payment_type == 'finance' ? 'primary' : 'default'\\r\\n              }}\\\"\\r\\n              (click)=\\\"q.payment_type = 'finance'\\\"\\r\\n            >\\r\\n              finance\\r\\n            </button>\\r\\n            <button\\r\\n              class=\\\"btn btn-{{\\r\\n                q.payment_type == 'cash' ? 'primary' : 'default'\\r\\n              }}\\\"\\r\\n              (click)=\\\"q.payment_type = 'cash'\\\"\\r\\n            >\\r\\n              cash\\r\\n            </button>\\r\\n            <button\\r\\n              class=\\\"btn btn-{{\\r\\n                q.payment_type == 'card' ? 'primary' : 'default'\\r\\n              }}\\\"\\r\\n              (click)=\\\"q.payment_type = 'card'\\\"\\r\\n            >\\r\\n              card\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        *ngIf=\\\"query.view == 'n'\\\"\\r\\n        (click)=\\\"createQuery(query)\\\"\\r\\n      >\\r\\n        Create\\r\\n      </button>\\r\\n      <button\\r\\n        class=\\\"btn btn-info\\\"\\r\\n        *ngIf=\\\"query.view == 'u'\\\"\\r\\n        (click)=\\\"updateQuery(query)\\\"\\r\\n      >\\r\\n        Update\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div style=\\\"margin-top: 2%\\\">\\r\\n    <div class=\\\"col-md-12\\\" *ngIf=\\\"query.view == 'v'\\\">\\r\\n      <h2>Query Details</h2>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\" *ngIf=\\\"query.view == 'v'\\\">\\r\\n      <div class=\\\"container row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <p>Name: {{ query.customer_id.name }}</p>\\r\\n          <p>Mobile: {{ query.customer_id.phone_no }}</p>\\r\\n          <p>Address: {{ query.customer_id.address }}</p>\\r\\n          <p>City: {{ query.customer_id.city }}</p>\\r\\n          <div *ngIf=\\\"role == 'm'\\\">\\r\\n            <ul *ngFor=\\\"let log of query.logs\\\">\\r\\n              <li>\\r\\n                <h5>{{ log }}</h5>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n          <ul *ngFor=\\\"let item of query.products; let i = index\\\">\\r\\n            <li>\\r\\n              <h6>Product:{{ i + 1 }}</h6>\\r\\n            </li>\\r\\n            <li>Company: {{ item.brand }}</li>\\r\\n            <li>product: {{ item.product_type }}</li>\\r\\n            <li>Model No: {{ item.model_no }}</li>\\r\\n            <li>Price: {{ item.given_price }}</li>\\r\\n            <li>Date:{{ item.date }}</li>\\r\\n            <li>\\r\\n              <label>Mode Of Payment:</label>\\r\\n              <button\\r\\n                disabled\\r\\n                class=\\\"btn btn-{{\\r\\n                  item.payment_type == 'finance' ? 'primary' : 'default'\\r\\n                }}\\\"\\r\\n                *ngIf=\\\"item.payment_type == 'finance'\\\"\\r\\n              >\\r\\n                finance\\r\\n              </button>\\r\\n              <button\\r\\n                disabled\\r\\n                class=\\\"btn btn-{{\\r\\n                  item.payment_type == 'cash' ? 'primary' : 'default'\\r\\n                }}\\\"\\r\\n                *ngIf=\\\"item.payment_type == 'cash'\\\"\\r\\n              >\\r\\n                cash\\r\\n              </button>\\r\\n              <button\\r\\n                disabled\\r\\n                class=\\\"btn btn-{{\\r\\n                  item.payment_type == 'card' ? 'primary' : 'default'\\r\\n                }}\\\"\\r\\n                *ngIf=\\\"item.payment_type == 'card'\\\"\\r\\n              >\\r\\n                card\\r\\n              </button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Enquiery } from \"../../Enquiery\";\r\nimport { enquery_success } from \"src/app/success.model\";\r\nimport { EnqueryServiceService } from \"../../enquery-service/enquery-service.service\";\r\n// import { parse } from 'path';\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { pipe } from \"rxjs\";\r\nimport { CommonService } from \"../../common/common.service\";\r\nimport { AlertService } from \"../../alert-service/alert.service\";\r\n\r\n@Component({\r\n  selector: \"app-enquiry-details\",\r\n  templateUrl: \"./enquiry-details.component.html\",\r\n  styleUrls: [\"./enquiry-details.component.css\"],\r\n  providers: [EnqueryServiceService],\r\n})\r\nexport class EnquiryDetailsComponent implements OnInit {\r\n  count;\r\n  @Input() query: Enquiery;\r\n\r\n  @Input() createHandler: Function;\r\n  @Input() updateHandler: Function;\r\n  querieslist: Enquiery[];\r\n  s_id: number;\r\n  jwt_token: string;\r\n  shop_id: string; // shop id from salesman after login\r\n  salesmen_id; // salesman id from salesman after login\r\n  errorMessage;\r\n  role;\r\n  options = {\r\n    autoClose: true,\r\n    keepAfterRouteChange: false,\r\n  };\r\n  constructor(\r\n    private apicall: EnqueryServiceService,\r\n    private datepipe: DatePipe,\r\n    private cservice: CommonService,\r\n    protected alertService: AlertService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activity();\r\n  }\r\n  async activity() {\r\n    this.role = this.cservice.getUserDetails().role;\r\n    this.salesmen_id = this.cservice.getUserDetails().salesmen_id; //salesmen id\r\n    this.shop_id = this.cservice.getUserDetails().shop_id; // shop id\r\n    const today = new Date();\r\n    const date = this.datepipe.transform(today, \"dd-MM-yyyy\");\r\n    // this.querieslist = await this.apicall.getEnquiries(this.s_id, date);\r\n    // this.apicall.getTodaysEnquiries(this.salesmen_id, date).subscribe(\r\n    //   (data) => {\r\n    //     this.newquerylist = data;\r\n    //     console.log(this.newquerylist);\r\n    //   },\r\n    //   (error) => {\r\n    //     this.errorMessage = <any>error;\r\n    //   }\r\n    // );\r\n    this.apicall.getEnquiries(this.salesmen_id, \"15-08-2021\").subscribe(\r\n      (data) => {\r\n        this.querieslist = data;\r\n      },\r\n      (error) => {\r\n        this.errorMessage = <any>error;\r\n      }\r\n    );\r\n  }\r\n  setProduct(c) {\r\n    let cur_prod_len = this.query.products.length;\r\n    c = Number(this.query.count);\r\n    console.log(cur_prod_len, c);\r\n    if (c > cur_prod_len) {\r\n      let final_count = c - cur_prod_len;\r\n      const d = Date.parse(\"25-05-2018\");\r\n      for (let i = 0; i < final_count; i++) {\r\n        const _id = Math.random();\r\n        this.query.products.push({\r\n          id: _id,\r\n          brand: \"\",\r\n          product_type: \"\",\r\n          model_no: \"\",\r\n          given_price: \"\",\r\n          payment_type: \"\",\r\n          end_date: d,\r\n          days: 0,\r\n        });\r\n      }\r\n    }\r\n    console.log(this.query.products);\r\n  }\r\n\r\n  async createQuery(query: Enquiery) {\r\n    query.products.forEach(\r\n      function (e) {\r\n        e.end_date = this.setDate(e.days);\r\n      }.bind(this)\r\n    );\r\n\r\n    await this.apicall\r\n      .createQuery(query)\r\n      .then((newQuery: any) => {\r\n        this.createHandler(newQuery.res);\r\n        this.alertService.success(newQuery.message, this.options);\r\n      })\r\n      .catch((error) => {\r\n        this.alertService.error(error, this.options);\r\n      });\r\n    this.activity();\r\n  }\r\n\r\n  updateQuery(query: Enquiery): void {\r\n    this.querieslist.forEach(\r\n      function (e) {\r\n        if (e._id === query._id) {\r\n          e.products.forEach(\r\n            function (w) {\r\n              query.products.forEach(\r\n                function (q) {\r\n                  if (w.id === q.id && w.days !== q.days) {\r\n                    q.date = this.setDate(q.days);\r\n                  }\r\n                }.bind(this)\r\n              );\r\n            }.bind(this)\r\n          );\r\n        }\r\n      }.bind(this)\r\n    );\r\n    if (this.role == \"m\") {\r\n      const today = new Date();\r\n      let msg = \"Manager has updated the document on \" + today;\r\n      query.logs.push(msg);\r\n    }\r\n    this.apicall\r\n      .updateQuery(this.salesmen_id, query)\r\n      .then((updatedQuery: enquery_success) => {\r\n        this.updateHandler(updatedQuery.res);\r\n        this.alertService.success(updatedQuery.message, this.options);\r\n      })\r\n      .catch((error) => {\r\n        this.alertService.error(error, this.options);\r\n      });\r\n  }\r\n  setDate(days) {\r\n    const theDate = new Date();\r\n    const date = new Date(theDate.getTime() + days * 24 * 60 * 60 * 1000);\r\n    return this.datepipe.transform(date, \"dd-MM-yyyy\");\r\n  }\r\n}\r\n","module.exports = \".row{\\r\\n    margin: 0px;\\r\\n}\\r\\n.view-button{\\r\\n    position: absolute;\\r\\n    right: 25%;\\r\\n    top: 7%;\\r\\n}\\r\\n.update-button{\\r\\n    position: absolute;\\r\\n    right: 4%;\\r\\n    top: 7%;\\r\\n}\\r\\n.status-button{\\r\\n    position: absolute;\\r\\n    right: 35%;\\r\\n    top: 7%;\\r\\n}\\r\\n@media only screen and (max-width: 640px) {\\r\\n    li.list-group-item {\\r\\n        padding: 10px 5px;\\r\\n    }\\r\\n    li.list-group-item table {\\r\\n        width: 100%;\\r\\n    }\\r\\n    td.username{\\r\\n        padding: 0;\\r\\n        display: block;\\r\\n        width: 100%;;\\r\\n    }\\r\\n    td.view{\\r\\n        width: auto;\\r\\n        display: inline-block;\\r\\n        vertical-align: top;\\r\\n    }\\r\\n    .view-button{\\r\\n        position: static;\\r\\n        float: none;\\r\\n    width: 100%;\\r\\n    margin-right: 10px;\\r\\n    }\\r\\n    .update-button{\\r\\n        width: 100%;\\r\\n        float: none;\\r\\n        position: static;\\r\\n    }\\r\\n    .status-button{\\r\\n        float: none;\\r\\n        position: static;\\r\\n    right: 35%;\\r\\n    top: 7%;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<!-- manager navbar -->\\r\\n<div *ngIf=\\\"role == 'm'\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/profile-create']\\\">\\r\\n      <img\\r\\n        src=\\\"../../../assets/brand/bootstrap-solid.svg\\\"\\r\\n        width=\\\"30\\\"\\r\\n        height=\\\"30\\\"\\r\\n        class=\\\"d-inline-block align-top\\\"\\r\\n        alt=\\\"\\\"\\r\\n      />\\r\\n      Juturu\\r\\n    </a>\\r\\n    <button\\r\\n      class=\\\"navbar-toggler\\\"\\r\\n      type=\\\"button\\\"\\r\\n      data-toggle=\\\"collapse\\\"\\r\\n      data-target=\\\"#navbarSupportedContent\\\"\\r\\n      aria-controls=\\\"navbarSupportedContent\\\"\\r\\n      aria-expanded=\\\"false\\\"\\r\\n      aria-label=\\\"Toggle navigation\\\"\\r\\n    >\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile-create']\\\"\\r\\n            >Profile Create</a\\r\\n          >\\r\\n        </li>\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/enquiry-list']\\\"\\r\\n            >Enquiries<span class=\\\"sr-only\\\">(current)</span></a\\r\\n          >\\r\\n        </li>\\r\\n      </ul>\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">Logout</button>\\r\\n    </div>\\r\\n  </nav>\\r\\n</div>\\r\\n<!-- manager navbar ends here -->\\r\\n<!-- salesmen navbar -->\\r\\n<div *ngIf=\\\"role == 's'\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/billing-list']\\\">\\r\\n      <img\\r\\n        src=\\\"../../../assets/brand/bootstrap-solid.svg\\\"\\r\\n        width=\\\"30\\\"\\r\\n        height=\\\"30\\\"\\r\\n        class=\\\"d-inline-block align-top\\\"\\r\\n        alt=\\\"\\\"\\r\\n      />\\r\\n      Juturu\\r\\n    </a>\\r\\n    <button\\r\\n      class=\\\"navbar-toggler\\\"\\r\\n      type=\\\"button\\\"\\r\\n      data-toggle=\\\"collapse\\\"\\r\\n      data-target=\\\"#navbarSupportedContent\\\"\\r\\n      aria-controls=\\\"navbarSupportedContent\\\"\\r\\n      aria-expanded=\\\"false\\\"\\r\\n      aria-label=\\\"Toggle navigation\\\"\\r\\n    >\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/enquiry-list']\\\"\\r\\n            >Enquiries<span class=\\\"sr-only\\\">(current)</span></a\\r\\n          >\\r\\n        </li>\\r\\n        <!-- <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/billing-list']\\\">Bills</a>\\r\\n        </li> -->\\r\\n      </ul>\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">Logout</button>\\r\\n    </div>\\r\\n  </nav>\\r\\n</div>\\r\\n<!--  saslesmen navbar ends -->\\r\\n<div>\\r\\n  <alert></alert>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h2>New Added Queries</h2>\\r\\n      <span *ngIf=\\\"!newquerylist.length\\\">No new quieries</span>\\r\\n      <ul class=\\\"list-group\\\" *ngFor=\\\"let query of newquerylist\\\">\\r\\n        <li\\r\\n          class=\\\"list-group-item\\\"\\r\\n          *ngIf=\\\"role == 's' && query.status && query.status == 'p'\\\"\\r\\n        >\\r\\n          <table>\\r\\n            <td class=\\\"username\\\">{{ query.customer_id.name }}</td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-{{\\r\\n                  query.status == 'p' ? 'danger' : ''\\r\\n                }} status-button\\\"\\r\\n                (click)=\\\"\\r\\n                  query.status == 'p'\\r\\n                    ? (query.status = 'd')\\r\\n                    : (query.status = 'p');\\r\\n                  updatestatus(query)\\r\\n                \\\"\\r\\n              >\\r\\n                {{ query.status == \\\"p\\\" ? \\\"clear pending\\\" : \\\"Done\\\" }}\\r\\n              </button>\\r\\n            </td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-warning view-button\\\"\\r\\n                [class.active]=\\\"query === selectedQuery\\\"\\r\\n                (click)=\\\"viewQuery(query)\\\"\\r\\n              >\\r\\n                view\\r\\n              </button>\\r\\n            </td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-primary update-button\\\"\\r\\n                (click)=\\\"selectQuery(query); query.view = 'u'\\\"\\r\\n              >\\r\\n                Update\\r\\n              </button>\\r\\n            </td>\\r\\n          </table>\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\" *ngIf=\\\"role == 'm' && query.status\\\">\\r\\n          <table>\\r\\n            <td class=\\\"username\\\">{{ query.customer_id.name }}</td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-{{\\r\\n                  query.status == 'p' ? 'danger' : ''\\r\\n                }} status-button\\\"\\r\\n                (click)=\\\"\\r\\n                  query.status == 'p'\\r\\n                    ? (query.status = 'd')\\r\\n                    : (query.status = 'p');\\r\\n                  updatestatus(query)\\r\\n                \\\"\\r\\n              >\\r\\n                {{ query.status == \\\"p\\\" ? \\\"clear pending\\\" : \\\"Done\\\" }}\\r\\n              </button>\\r\\n            </td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-warning view-button\\\"\\r\\n                [class.active]=\\\"query === selectedQuery\\\"\\r\\n                (click)=\\\"viewQuery(query)\\\"\\r\\n              >\\r\\n                view\\r\\n              </button>\\r\\n            </td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-primary update-button\\\"\\r\\n                (click)=\\\"selectQuery(query); query.view = 'u'\\\"\\r\\n              >\\r\\n                Update\\r\\n              </button>\\r\\n            </td>\\r\\n          </table>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <h2>Pending Quiries for the day</h2>\\r\\n      <ul class=\\\"list-group\\\" *ngFor=\\\"let query of querieslist\\\">\\r\\n        <li\\r\\n          class=\\\"list-group-item\\\"\\r\\n          *ngIf=\\\"role == 's' && query.status && query.status == 'p'\\\"\\r\\n        >\\r\\n          <table>\\r\\n            <td class=\\\"username\\\">{{ query.customer_id.name }}</td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-{{\\r\\n                  query.status == 'p' ? 'danger' : ''\\r\\n                }} status-button\\\"\\r\\n                (click)=\\\"\\r\\n                  query.status == 'p'\\r\\n                    ? (query.status = 'd')\\r\\n                    : (query.status = 'p');\\r\\n                  updatestatus(query)\\r\\n                \\\"\\r\\n              >\\r\\n                {{ query.status == \\\"p\\\" ? \\\"clear enquiry\\\" : \\\"Make it Pending\\\" }}\\r\\n              </button>\\r\\n            </td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-warning view-button\\\"\\r\\n                [class.active]=\\\"query === selectedQuery\\\"\\r\\n                (click)=\\\"viewQuery(query)\\\"\\r\\n              >\\r\\n                view\\r\\n              </button>\\r\\n            </td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-primary update-button\\\"\\r\\n                (click)=\\\"selectQuery(query); query.view = 'u'\\\"\\r\\n              >\\r\\n                Update\\r\\n              </button>\\r\\n            </td>\\r\\n          </table>\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\" *ngIf=\\\"query.status && role == 'm'\\\">\\r\\n          <table>\\r\\n            <td class=\\\"username\\\">{{ query.customer_id.name }}</td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-{{\\r\\n                  query.status == 'p' ? 'danger' : ''\\r\\n                }} status-button\\\"\\r\\n                (click)=\\\"\\r\\n                  query.status == 'p'\\r\\n                    ? (query.status = 'd')\\r\\n                    : (query.status = 'p');\\r\\n                  updatestatus(query)\\r\\n                \\\"\\r\\n              >\\r\\n                {{ query.status == \\\"p\\\" ? \\\"clear enquiry\\\" : \\\"Make it Pending\\\" }}\\r\\n              </button>\\r\\n            </td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-warning view-button\\\"\\r\\n                [class.active]=\\\"query === selectedQuery\\\"\\r\\n                (click)=\\\"viewQuery(query)\\\"\\r\\n              >\\r\\n                view\\r\\n              </button>\\r\\n            </td>\\r\\n            <td class=\\\"view\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-primary update-button\\\"\\r\\n                (click)=\\\"selectQuery(query); query.view = 'u'\\\"\\r\\n              >\\r\\n                Update\\r\\n              </button>\\r\\n            </td>\\r\\n          </table>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <button\\r\\n        class=\\\"btn btn-warning\\\"\\r\\n        *ngIf=\\\"role != 'm'\\\"\\r\\n        (click)=\\\"createNewQuery()\\\"\\r\\n      >\\r\\n        New\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 col-md-offset-2\\\">\\r\\n      <app-enquiry-details\\r\\n        [query]=\\\"selectedQuery\\\"\\r\\n        [createHandler]=\\\"addQuery\\\"\\r\\n        [updateHandler]=\\\"updateQuery\\\"\\r\\n      >\\r\\n      </app-enquiry-details>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Query } from \"@angular/core\";\r\nimport { EnqueryServiceService } from \"../../enquery-service/enquery-service.service\";\r\nimport { Enquiery } from \"../../Enquiery\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { CommonService } from \"../../common/common.service\";\r\nimport { AuthServiceService } from \"../../AuthService/auth-service.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { enquery_success } from \"src/app/success.model\";\r\nimport { AlertService } from \"../../alert-service/alert.service\";\r\n\r\n@Component({\r\n  selector: \"app-enquiry-list\",\r\n  templateUrl: \"./enquiry-list.component.html\",\r\n  styleUrls: [\"./enquiry-list.component.css\"],\r\n  providers: [EnqueryServiceService],\r\n})\r\nexport class EnquiryListComponent implements OnInit {\r\n  querieslist: Enquiery[];\r\n  newquerylist: Enquiery[] = [];\r\n  selectedQuery: Enquiery;\r\n  filteredquierieslist;\r\n  jwt_token: string;\r\n  shop_id: string; // shop id from salesman after login\r\n  salesmen_id; // salesman id from salesman after login\r\n  todayeDate;\r\n  role: string;\r\n  errorMessage;\r\n  options = {\r\n    autoClose: true,\r\n    keepAfterRouteChange: false,\r\n  };\r\n  constructor(\r\n    private apiCall: EnqueryServiceService,\r\n    private datepipe: DatePipe,\r\n    private cservice: CommonService,\r\n    private Auth: AuthServiceService,\r\n    private router: Router,\r\n    protected alertService: AlertService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.activate();\r\n  }\r\n  async activate() {\r\n    this.salesmen_id = this.cservice.getUserDetails().salesmen_id; //salesmen id\r\n    this.shop_id = this.cservice.getUserDetails().shop_id; // shop id\r\n    this.role = this.cservice.getUserDetails().role;\r\n    const today = new Date();\r\n    const date = this.datepipe.transform(today, \"dd-MM-yyyy\");\r\n\r\n    // THis Api is to call the enqueries that are added today by salesmen. IN Backend Date_of_entry field .\r\n    this.apiCall.getTodaysEnquiries(this.salesmen_id, date).subscribe(\r\n      (data) => {\r\n        this.newquerylist = data;\r\n        console.log(this.newquerylist);\r\n      },\r\n      (error) => {\r\n        this.errorMessage = <any>error;\r\n      }\r\n    );\r\n    this.apiCall.getEnquiries(this.salesmen_id, \"15-08-2021\").subscribe(\r\n      (data) => {\r\n        this.querieslist = data;\r\n      },\r\n      (error) => {\r\n        this.errorMessage = <any>error;\r\n      }\r\n    );\r\n\r\n    this.todayeDate = date;\r\n  }\r\n  updatestatus(query: Enquiery) {\r\n    if (this.role == \"m\") {\r\n      let msg = \"Manager has updated status on \" + this.todayeDate;\r\n      query.logs.push(msg);\r\n    }\r\n    this.apiCall\r\n      .updateQuery(this.salesmen_id, query)\r\n      .then((updatedQuery: enquery_success) => {\r\n        this.alertService.success(updatedQuery.message, this.options);\r\n      })\r\n      .catch((error) => {\r\n        this.alertService.error(error, this.options);\r\n      });\r\n  }\r\n\r\n  // find this out\r\n  getIndexOfContact(QueryId: String) {\r\n    return this.querieslist.findIndex((query) => {\r\n      return query._id === QueryId;\r\n    });\r\n  }\r\n\r\n  selectQuery(query: Enquiery) {\r\n    this.selectedQuery = query;\r\n  }\r\n\r\n  createNewQuery() {\r\n    const i = Math.random();\r\n    const query: Enquiery = {\r\n      customer_id: { name: \"\", phone_no: 0, address: \"\", city: \"\" },\r\n      shop_id: this.shop_id,\r\n      view: \"n\",\r\n      status: \"p\",\r\n      date_of_entry: this.todayeDate,\r\n      logs: [],\r\n      products: [\r\n        {\r\n          id: i,\r\n          brand: \"\",\r\n          product_type: \"\",\r\n          model_no: \"\",\r\n          given_price: \"\",\r\n          days: 0,\r\n          payment_type: \"\",\r\n          end_date: 0,\r\n        },\r\n      ],\r\n      count: \"1\",\r\n      salesman_id: this.salesmen_id,\r\n    };\r\n    query.view = \"n\";\r\n    // By default, a newly-created contact will have the selected state.\r\n    this.selectQuery(query);\r\n  }\r\n\r\n  // to make the state to view\r\n  viewQuery(query: Enquiery) {\r\n    query.view = \"v\";\r\n    this.selectQuery(query);\r\n  }\r\n\r\n  // This function is used to maintain the create handler. When handler is returns query this ffunction will add and return newquerylist by adding the current newly added query. \"newquerylist\" is newly added list of query for the day.\r\n  addQuery = (query: Enquiery) => {\r\n    this.newquerylist.push(query);\r\n    this.selectQuery(query);\r\n    this.activate();\r\n    return this.newquerylist;\r\n  };\r\n\r\n  // need to find\r\n  updateQuery = (query: Enquiery) => {\r\n    console.log(query);\r\n    const idx = this.getIndexOfContact(query._id);\r\n    if (idx !== -1) {\r\n      this.querieslist[idx] = query;\r\n    }\r\n    this.activate();\r\n    return this.querieslist;\r\n  };\r\n  logout() {\r\n    this.Auth.logout();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'jsonconv'\r\n})\r\nexport class JsonconvPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    return Object.keys(value);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/profile-create']\\\">\\n      <img\\n        src=\\\"../../../assets/brand/bootstrap-solid.svg\\\"\\n        width=\\\"30\\\"\\n        height=\\\"30\\\"\\n        class=\\\"d-inline-block align-top\\\"\\n        alt=\\\"\\\"\\n      />\\n      Juturu\\n    </a>\\n    <button\\n      class=\\\"navbar-toggler\\\"\\n      type=\\\"button\\\"\\n      data-toggle=\\\"collapse\\\"\\n      data-target=\\\"#navbarSupportedContent\\\"\\n      aria-controls=\\\"navbarSupportedContent\\\"\\n      aria-expanded=\\\"false\\\"\\n      aria-label=\\\"Toggle navigation\\\"\\n    >\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile-create']\\\"\\n            >Profile Create</a\\n          >\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/enquiry-list']\\\"\\n            >Enquiries<span class=\\\"sr-only\\\">(current)</span></a\\n          >\\n        </li>\\n      </ul>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">Logout</button>\\n    </div>\\n  </nav>\\n</div>\\n<alert></alert>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <h2>Staff Profiles</h2>\\n    <span *ngIf=\\\"!user.length\\\">No Staff Profiles Created</span>\\n    <ul class=\\\"list-group\\\" *ngFor=\\\"let profile of user\\\">\\n      <li class=\\\"list-group-item\\\">\\n        <table>\\n          <td class=\\\"username\\\">\\n            <p>Name: {{ profile.first_name + \\\" \\\" + profile.last_name }}</p>\\n            <p>email: {{ profile.email }}</p>\\n            <p>Phone: {{ profile.phone_no }}</p>\\n            <p>address: {{ profile.address }}</p>\\n            <p>city: {{ profile.city }}</p>\\n          </td>\\n          <td class=\\\"view\\\">\\n            <button\\n              class=\\\"btn btn-primary update-button\\\"\\n              (click)=\\\"\\n                profile.view = 'u';\\n                profile.password = '';\\n                selectProfile(profile)\\n              \\\"\\n            >\\n              Edit Profile\\n            </button>\\n          </td>\\n          <td class=\\\"view\\\">\\n            <button\\n              class=\\\"btn btn-warning update-button\\\"\\n              (click)=\\\"\\n                profile.view = 'r';\\n                profile.password = '';\\n                selectProfile(profile)\\n              \\\"\\n            >\\n              Reset Password\\n            </button>\\n          </td>\\n          <td class=\\\"view\\\">\\n            <button\\n              class=\\\"btn btn-btn btn-{{\\n                profile.status == 'enable' ? 'warning' : 'danger'\\n              }} update-button\\\"\\n              (click)=\\\"\\n                profile.status === 'enable'\\n                  ? (profile.status = 'disable')\\n                  : (profile.status = 'enable');\\n                DisableProfile(profile)\\n              \\\"\\n            >\\n              {{ profile.status === \\\"enable\\\" ? \\\"disable\\\" : \\\"enable\\\" }} account\\n            </button>\\n          </td>\\n        </table>\\n      </li>\\n    </ul>\\n    <button class=\\\"btn btn-warning\\\" (click)=\\\"newUser()\\\">Create Profile</button>\\n  </div>\\n\\n  <div class=\\\"col-md-6 col-md-offset-2\\\" *ngIf=\\\"createUser\\\">\\n    <div\\n      *ngIf=\\\"\\n        createUser.view == 'u' ||\\n        (createUser.view == 'n' && createUser.view != 'v')\\n      \\\"\\n    >\\n      <h2>Create New Profile</h2>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"query-name\\\">First Name</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"First-name\\\"\\n          [(ngModel)]=\\\"createUser.first_name\\\"\\n          placeholder=\\\"Enter first name\\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"query-name\\\">Last Name</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"Last-name\\\"\\n          [(ngModel)]=\\\"createUser.last_name\\\"\\n          placeholder=\\\"Enter first name\\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phone-no\\\">Phone_No</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"query-phone-no\\\"\\n          [(ngModel)]=\\\"createUser.phone_no\\\"\\n          placeholder=\\\"Enter Phone Number Here\\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group\\\" *ngIf=\\\"createUser.view != 'u'\\\" disable>\\n        <label for=\\\"email\\\">Email</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"email\\\"\\n          [(ngModel)]=\\\"createUser.email\\\"\\n          placeholder=\\\"Enter Email Here\\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"email\\\"\\n          [(ngModel)]=\\\"createUser.email\\\"\\n          placeholder=\\\"Enter Email Here\\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group\\\" *ngIf=\\\"createUser.view != 'u'\\\">\\n        <label for=\\\"query-phone-no\\\">Password</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"password\\\"\\n          [(ngModel)]=\\\"createUser.password\\\"\\n          placeholder=\\\"Enter Password Here\\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group\\\" *ngIf=\\\"createUser.view != 'u'\\\">\\n        <label for=\\\"confirm-password\\\">Confirm Password</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"password\\\"\\n          [(ngModel)]=\\\"createUser.confirm_password\\\"\\n          placeholder=\\\"Re-Enter Password Here\\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"query-address\\\">Address</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"query-address\\\"\\n          [(ngModel)]=\\\"createUser.address\\\"\\n          placeholder=\\\"Enter customer street and door number \\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"query-address\\\">City</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"query-address\\\"\\n          [(ngModel)]=\\\"createUser.city\\\"\\n          placeholder=\\\"Enter customer street and door number \\\"\\n        />\\n      </div>\\n      <button\\n        class=\\\"btn btn-warning\\\"\\n        *ngIf=\\\"createUser.view == 'n'\\\"\\n        (click)=\\\"CreateProfile()\\\"\\n      >\\n        Create Profile\\n      </button>\\n      <button\\n        class=\\\"btn btn-warning\\\"\\n        *ngIf=\\\"createUser.view == 'u'\\\"\\n        (click)=\\\"updateProfile()\\\"\\n      >\\n        Update Profile\\n      </button>\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"close()\\\">Close</button>\\n    </div>\\n    <div *ngIf=\\\"createUser.view == 'r'\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Name\\\"\\n          >Name:\\n          <h2>\\n            {{ createUser.first_name + \\\" \\\" + createUser.last_name }}\\n          </h2></label\\n        >\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"query-phone-no\\\">Password</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"password\\\"\\n          [(ngModel)]=\\\"createUser.password\\\"\\n          placeholder=\\\"Enter Password Here\\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"confirm-password\\\">Confirm Password</label>\\n        <input\\n          class=\\\"form-control\\\"\\n          name=\\\"password\\\"\\n          [(ngModel)]=\\\"createUser.confirm_password\\\"\\n          placeholder=\\\"Re-Enter Password Here\\\"\\n        />\\n      </div>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"ResetPassword()\\\">\\n        Reset Password\\n      </button>\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"close()\\\">close</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthServiceService } from \"../../AuthService/auth-service.service\";\nimport { User, userNew } from \"src/app/user\";\nimport { CommonService } from \"../../common/common.service\";\nimport { AlertService } from \"../../alert-service/alert.service\";\n@Component({\n  selector: \"app-profile-create\",\n  templateUrl: \"./profile-create.component.html\",\n  styleUrls: [\"./profile-create.component.css\"],\n})\nexport class ProfileCreateComponent implements OnInit {\n  shop_id = this.cservice.getUserDetails().shop_id; // shop id from salesman after login\n  salesmen_id = this.cservice.getUserDetails().salesmen_id; // salesman id from salesman after login\n  role: string;\n  errorMessage;\n  user: User[] = [];\n  createUser: userNew;\n  options = {\n    autoClose: true,\n    keepAfterRouteChange: false,\n  };\n\n  constructor(\n    private router: Router,\n    private Auth: AuthServiceService,\n    private cservice: CommonService,\n    protected alertService: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.Activate();\n  }\n  async Activate() {\n    this.Auth.getUsers(this.salesmen_id).subscribe((data) => {\n      this.user = data;\n    });\n  }\n  selectProfile(profile: userNew) {\n    this.createUser = profile;\n  }\n  newUser() {\n    let newUser: userNew = {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      _id: \"\",\n      shop_id: this.shop_id,\n      address: \"\",\n      city: \"\",\n      role: \"s\",\n      phone_no: \"\",\n      view: \"n\",\n      status: \"enable\",\n    };\n\n    this.createUser = newUser;\n  }\n  close() {\n    this.createUser = null;\n  }\n  async updateProfile() {\n    console.log(this.createUser);\n    await this.Auth.editUser(this.createUser).subscribe(\n      (data) => {\n        this.alertService.success(\"Profile Updated Succesfully\", this.options);\n        this.createUser = null;\n      },\n      (err) => {\n        this.alertService.error(err, this.options);\n      }\n    );\n  }\n  async CreateProfile() {\n    await this.Auth.register(this.createUser).subscribe(\n      (data) => {\n        this.alertService.success(\"Profile Updated Succesfully\", this.options);\n        this.createUser = null;\n      },\n      (err) => {\n        this.alertService.error(err, this.options);\n      }\n    );\n  }\n  async DisableProfile(profile: userNew) {\n    let id = profile._id;\n    let profile_body = {\n      status: profile.status,\n    };\n    await this.Auth.disableProfile(id, profile_body).subscribe((data) => {\n      this.alertService.success(data.message, this.options);\n      this.createUser = null;\n    });\n  }\n  async ResetPassword() {\n    let reset_body = {\n      password: this.createUser.password,\n      confirm_password: this.createUser.confirm_password,\n      _id: this.createUser._id,\n    };\n    await this.Auth.resetPassword(reset_body).subscribe(\n      (data) => {\n        this.alertService.success(\"Password Updated Succesfully\", this.options);\n        this.createUser = null;\n      },\n      (err) => {\n        this.alertService.error(err.error.message, this.options);\n      }\n    );\n  }\n  logout() {\n    this.Auth.logout();\n    this.router.navigate([\"/login\"]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Shop } from \"../shop\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { shareReplay, tap } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ShopServiceService {\n  getShopsList: Shop;\n  constructor(private http: HttpClient) {}\n  private api_url = \"http://localhost:8000\";\n\n  getShops(): Observable<Shop> {\n    return this.http.get<Shop>(this.api_url + \"api/getShops\").pipe(\n      tap((res) => {\n        return (this.getShopsList = res);\n      }),\n      shareReplay()\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.log(err));\r\n"],"sourceRoot":""}